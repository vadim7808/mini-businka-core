from flask import Flask, request, jsonify
import os
import google.generativeai as genai
from dotenv import load_dotenv
from flask_cors import CORS

load_dotenv()
app = Flask(__name__)
CORS(app)

genai.configure(api_key=os.getenv("GEMINI_API_KEY"))
model = genai.GenerativeModel("gemini-pro")

@app.route("/process", methods=["POST"])
def process():
    data = request.get_json()
    user_text = data.get("text", "")
    window_info = data.get("window_info", {})

    prompt = f"""
–¢—ã ‚Äî –≥–æ–ª–æ—Å–æ–≤–æ–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∫–∞–∑–∞–ª: "{user_text}".
–ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–∫–æ–Ω: {window_info}

–û—Ç–≤–µ—Ç—å:
1. –ß—Ç–æ –æ–∑–≤—É—á–∏—Ç—å (–∫–ª—é—á 'speak').
2. –ö–∞–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å (—Å–ø–∏—Å–æ–∫ –≤ –∫–ª—é—á–µ 'actions').
–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π.
"""

    try:
        response = model.generate_content(prompt)
        reply = response.text.strip()

        return jsonify({
            "actions": [
                {"type": "speak", "text": reply}
            ]
        })

    except Exception as e:
        return jsonify({"error": str(e)}), 500

@app.route("/")
def home():
    return "üí° –°–µ—Ä–≤–µ—Ä –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç."

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
